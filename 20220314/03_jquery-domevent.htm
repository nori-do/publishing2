<!DOCTYPE html>
<html lang="en">
<head>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <script>
        //이벤트
        //바닐라 js와 마찬가지로 제이쿼리에서도
        //특정 element에 이벤트를 연결할 수 있다.
        // 이런 이벤트를 붙이는 행위를 가리켜 이벤트 바인딩
        //이라고도 한다(event binding, 이벤트 묶기)

        // 이벤트 종료 및 설정
        // cilk(함수) - 선택요소 클릭시 함수 실행
        // dbclick(함수) - tjsxordyth ejqmfzmfflrtl gkatn tlfgod
        // mouseover(함수) - 선택요소 위에 마우스 올릴 시 함ㅈ수 실행
        // mouseout(함수) - 커서가 선택요소에서 벗어날 시 함수 실행
        // focus(함수) - 대상에 포커싱(탭키 등으로 타겟잡기)시 함수 실행
        // blur(함수) - 포커싱에서 해제될 시 함수 실행
        // focusin(함수) - input요소에 포커싱될 시 함수 실행
        // focusout(함수) - input요소 포커싱이 풀릴 시 함수 실행
        // keydown(함수) - 키 입력 감지시 함수 실행
        // keypress(함수) - 키 입력 감지시 함수 실행
        // mouseenter(함수) - 마우스가 선택 요소 내로 이동시 함수 실행
        // mouseleave(함수) - 마우스가 선택 요소 밖으로 나가면 함수 실행
        // mousemove(함수) - 마우스 움직이는 매 순간 함수 실행
        // resize(함수) - 창크기 변환시마다 함수 실행
        // submit(함수) - submit버튼 눌릴 시마다 함수 실행
        // reset(함수) - reset 버튼 눌릴때마다 함수 실행
        // toggle(함수) - 클릭할때마다 함수를 번갈아 실행
        // hover(함수) - 마우스 올렸을때, 벗어났을 때 함수 실행
        // unload(함수) - 문서 종료시 함수 실행
        // change(함수) - 값이 바뀌고 포커스 옮겨졌을 때 실행
        // bind(함수) - 여러개의 이벤트를 적용할 때 사용

        //실습용 코드
        // 문서 로딩 후 실행되도록 세팅해주세요
        $(function(){

            //#btn1에 onclick 이벤트를 걸어서
            // 클릭시 #textZon의 글씨색이 파란색으로 바뀌도록
            $("#btn1").click(function(){
                // #btn1을 클릭했을 때 이 내용을 실행한다.
                $("#textZone").css("color","blue");
            })

            // #btn2에 .mouseover를 활용해서
            //#textZone의 배경색이 노란색으로 바뀌게
            // 이벤트를 걸어주세요
            $("#btn2").mouseover(function(){
                $("#textZone").css("background", "yellow");
            })
            
            //#btn3에 .bind를 활용해서 2개의 동작 이벤트를 동시에
            // 걸어보겠습니다.
            // .bind("이벤트1` 이벤트2" 함수)
            //형태로 이벤트명을 나란히 적어주면 됩니다.
            // 거는 이벤트는 마우스오버와 포커스(mouseover, focus)
            // 결과는 #textZone의 글씨색은 녹색, 볼드처리가 됩니다.

            $("#btn3").bind("mouseover focus", function(){
                $("#textZone").css("color", "green").css("font-weight","bold");
            })

            //#listWrap에 mouseenter시
            //.list1의 .css()"display"를 block으로
            //mouseleave시 display속성을 none으로 바구게
            // 이벤트를 2개 설정해주세요
                $("#listWrap").mouseenter(function(){
                    $(".list1").css("display", "block");
            })
                $("#listWrap").mouseleave(function(){
                    $(".list1").css("display", "none");
                })
                
            //hover는 마우스가 선택요소 영역에 오버되거나
            //아웃될때 실행되는 함수를 각각 지점한다.
            //mouseenter, mouseleave는 마우스가 올라가거나
            // 떠날 때 적용된 내용이 영구히 반영되지만
            // hover는 그 두 개를 동시에 묶어주기 때문에
            // 항상 마우스를 올린 동안에만 실행되는 로직에
            //함수1이 마우스를 올릴때, 함수2가 마우스를 뺄 때 실행될 내용
            // .hover(함수1(){}, 함수2(){});
            // 마우스를 올리면 .hover의 글씨색 아쿠아색
            // 마우스를 빼면 빨간색으로

            $(".hover").hover(function(){
                $(".hover").css("color", "aqua");
            }, function(){
                $(".hover").css("color", "red");
            })
        })
    </script>
    <style>
        *{
            margin: 0;
            padding: 0;
        }
        li{
            list-style: none;
        }
        body{
            font: 12px/1.5 "굴림", Gulim;
            margin: 10px;
        }
        h2{
            margin: 30px;
        }
        a{
            color: #333;
        }
        #textZone{
            width: 700px;
        }
        #listWrap{
            background: #cfcfcf;
            width: 110px;
            padding: 10px;
        }
        .list1{
            display: none;
        }
    </style>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>
<body>
    <div id="wrap">
        <h1>이벤트 연습</h1>
        <p id="textZone">
            웹 브라우저에서 버튼을 클릭한다거나 마우스를
            움직이거나 하는 모든 행위를 이벤드라고 합니다.
            그리고 이벤트 발생시 함수의 실행문이 수행되도록
            이벤트를 지정하는 것을 이벤트 핸들러라고 합니다.
        </p>
        <h2>click 메서드</h2>
        <p><button id="btn1">click</button></p>

        <h2>mouseover</h2>
        <p><button id="btn2">mouseover</button></p>

        <h2>bind 메서드</h2>
        <p><button id="btn3">bind</button></p>

        <h2>mousleave 메서드</h2>
        <div id="listWrap">
            <h3>관련 사이트</h3>
            <ul class="list1">
                <li><a href="#">list1</a></li>
                <li><a href="#">list2</a></li>
                <li><a href="#">list3</a></li>
                <li><a href="#">list4</a></li>
            </ul>
        </div>
        <h2>hover 메서드</h2>
        <h3><a href="#" class="hover">hover</a></h3>
    </div>
</body>
</html>